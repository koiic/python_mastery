from dataclasses import dataclass@dataclassclass Element:    value: int    next: any = None@dataclassclass LinkedList:    head: Element    def append(self, new_element):        current = self.head        if self.head:            while current.next:                current = current.next            current.next = new_element        else:            self.head = new_element    def insert_first(self, new_element):        "Insert new element as the head of the LinkedList"        if self.head:            new_element.next = self.head            self.head = new_element    def delete_first(self):        current = self.head        if self.head:            self.head = self.head.next        else:            return currentclass Stack(object):    def __init__(self,top=None):        self.ll = LinkedList(top)    def push(self, new_element):        self.ll.insert_first(new_element)    def pop(self):        self.ll.delete_first()if __name__ == '__main__':    # Test cases    # Set up some Elements    e1 = Element(1)    e2 = Element(2)    e3 = Element(3)    e4 = Element(4)    # Start setting up a Stack    stack = Stack(e1)    # Test stack functionality    stack.push(e2)    stack.push(e3)    print('*****', stack.ll)    print(stack.pop())    print(stack.pop())    print(stack.pop())    print(stack.pop())    stack.push(e4)    print(stack.pop())    print('*****', stack.ll)